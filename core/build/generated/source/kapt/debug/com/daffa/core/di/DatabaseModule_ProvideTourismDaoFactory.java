// Generated by Dagger (https://dagger.dev).
package com.daffa.core.di;

import com.daffa.core.data.source.local.room.AppDao;
import com.daffa.core.data.source.local.room.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideTourismDaoFactory implements Factory<AppDao> {
  private final DatabaseModule module;

  private final Provider<AppDatabase> databaseProvider;

  public DatabaseModule_ProvideTourismDaoFactory(DatabaseModule module,
      Provider<AppDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public AppDao get() {
    return provideTourismDao(module, databaseProvider.get());
  }

  public static DatabaseModule_ProvideTourismDaoFactory create(DatabaseModule module,
      Provider<AppDatabase> databaseProvider) {
    return new DatabaseModule_ProvideTourismDaoFactory(module, databaseProvider);
  }

  public static AppDao provideTourismDao(DatabaseModule instance, AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideTourismDao(database));
  }
}
